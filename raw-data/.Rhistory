set.seed(101)
x1 <- rexp(100)
x2 <- rnorm(100,mean=x1,sd=1)
q()
q()
library(tinytex)
tinytex::install_tinytex()
tinytex::uninstall_tinytex()
tinytex::install_tinytex()
knitr::opts_chunk$set(echo=TRUE, error=FALSE)
options(dplyr.summarise.inform = FALSE)
UserFollowers = rpois(130, lambda = 50)
UserFriends = rpois(130, lambda = 40)
ggplot(Tweet, aes(x = UserFollowers, y = UserFriends)) +
geom_bin2d(bins = 3) +
labs(x = "User Followers", y = "User Friends", title = "Density Heat Map: UserFollows vs. UserFriends") +
theme_minimal()
knitr::opts_chunk$set(echo=TRUE, error=FALSE)
options(dplyr.summarise.inform = FALSE)
# general visualization
library(tidyverse)
library('ggplot2') # visualization
library('scales') # visualization
library('grid') # visualization
library('gridExtra') # visualization
library('RColorBrewer') # visualization
library('corrplot') # visualization
# general data manipulation
library('dplyr') # data manipulation
library('unnest') # data manipulation
library('GGally') # data manipulation
library('readr') # input/output
library('data.table') # data manipulation
library('tibble') # data wrangling
library('tidyr') # data wrangling
library('stringr') # string manipulation
library('forcats') # factor manipulation
# specific visualization
library('ggrepel') # visualization
library('ggridges') # visualization
# Date plus forecast
library('lubridate') # date and time
library('timeDate') # date and time
# Reads sample Tweets, etc.
sample_gpt_tweets <- read_csv("https://raw.githubusercontent.com/ryurko/DataViz-Class-Data/main/chatgpt_tweets_sample.csv")
Tweet <- sample_gpt_tweets
summary(Tweet)
Tweet <- sample_gpt_tweets
glimpse(Tweet)
library(tm)
library(wordcloud)
corpus <- Corpus(VectorSource(Tweet$Description))
corpus <- tm_map(corpus, content_transformer(tolower))
corpus <- tm_map(corpus, removePunctuation)
corpus <- tm_map(corpus, removeNumbers)
corpus <- tm_map(corpus, removeWords, stopwords("en"))
tdm <- TermDocumentMatrix(corpus)
m <- as.matrix(tdm)
word_freq <- rowSums(m)
word_df <- data.frame(word = names(word_freq), freq = word_freq)
word_df <- word_df[order(-word_df$freq), ]
wordcloud(words = word_df$word, freq = word_df$freq, min.freq = 1000, scale = c(3, 0.5), colors = brewer.pal(8, "Dark2"))
library(dplyr)
library(lubridate)
NumberTweets <- Tweet %>% mutate(mdy = format(Date, "%m-%d-%Y")) %>% group_by(mdy) %>%
summarise(count = n())
ggplot(NumberTweets, aes(x = mdy, y = count)) +
geom_point(color = "blue", size = 2) +
geom_line(color = "pink", size = .5) +
labs(x = "Time (Month Day, Year)", y = "Number of Tweets", title = "Time Series Line Graph of Number of Tweets") +
theme_minimal()
NumberTweetsMonth <- Tweet %>%
mutate(month = format(Date, "%B")) %>%
group_by(month) %>%
summarise(count = n())
ggplot(NumberTweetsMonth, aes(x = month, y = count)) +
geom_point(color = "blue", size = 2) +
geom_line(color = "pink", size = 0.5) +
labs(x = "Time (Month)", y = "Number of Tweets", title = "Time Series Line Graph of Number of Tweets") +
theme_minimal()
library(ggplot2)
ggplot(Tweet, aes(x = Likes, y = Retweets)) +
geom_histogram(binwidth = 0.5) +
geom_point(color = "purple", size = 3) +
coord_flip() +
labs(x = "Number of Likes", y = "Frequency of Retweets", title = "Marginal Distribution of Likes in #ChatGPT Posts with 95% CI")
library(ggplot2)
ggplot(Tweet, aes(x = Likes, y = Retweets)) +
geom_bar(stat = "identity", fill = "skyblue", color = "black") +
geom_point(color = "purple", size = 3) +
coord_flip() +
labs(x = "Number of Likes", y = "Frequency of Retweets", title = "Marginal Distribution of Likes in #ChatGPT Posts with 95% CI")
Tweet_plot
ggplot(NumberTweetsMonth, aes(x = month, y = count)) +
geom_boxplot(color = "blue", size = 2) +
geom_line(color = "pink", size = 0.5) +
labs(x = "Time (Month)", y = "Number of Tweets", title = "Time Series Line Graph of Number of Tweets") +
theme_minimal()
# Just the quantitative variables:
RetweetRelationship <- Tweet %>%
dplyr::select(Retweets, Likes)
# Standardize the data such that each column has variance 1:
RetweetRelationship <- apply(RetweetRelationship, MARGIN = 2,
FUN = function(x) x / sd(x))
# distance matrix
Tweet_dist <- dist(RetweetRelationship)
Tweet %>%
ggplot(aes(x = Likes, y = Followers)) +
geom_point(alpha = 0.5) +
geom_density2d() +
labs(x = "Likes", y = "Followers")
Tweet %>%
ggplot(aes(x = Likes, y = UserFollowers)) +
geom_point(alpha = 0.5) +
geom_density2d() +
labs(x = "Likes", y = "Followers")
Tweet %>%
ggplot(aes(x = Likes, y = UserFollowers)) +
geom_point(alpha = 0.5) +
norm + geom_hex(bins = 10) +
labs(x = "Likes", y = "Followers")
Tweet %>%
ggplot(aes(x = Likes, y = UserFollowers)) +
norm + geom_hex(bins = 10) +
labs(x = "Likes", y = "Followers")
library(GGally)
Tweet %>%
ggplot(aes(x = Likes, y = UserFollowers)) +
norm + geom_hex(bins = 10) +
labs(x = "Likes", y = "Followers")
knitr::opts_chunk$set(echo=TRUE, error=FALSE)
options(dplyr.summarise.inform = FALSE)
library(GGally)
Tweet %>%
ggplot(aes(x = Likes, y = UserFollowers)) +
norm + geom_hex(bins = 10) +
labs(x = "Likes", y = "Followers")
load("C:\\Users\\jenkelleman\\Desktop\\CMU Data Science Workflows\\WK 6\\Propertyappeals\\R\\.RData")
q()
library(readr)
bikeSharing <- read_csv("C:/Users/jenkelleman/OneDrive - Microsoft/Desktop/CMU DS Capstone/raw-data/bikeSharing.csv")
View(bikeSharing)
View(bikeSharing)
## Making equal number of columns in both datasets
biketest$registered=0
## Importing the data
{r} ````
## Make equal number of columns in both datasets
biketest$datetime <- NA
biketrain <- bikeSharing
---
#Set working directory
setwd("C:/Users/jenkelleman/OneDrive - Microsoft/Desktop/CMU DS Capstone/raw-data/bikeSharing.csv")
---
#Set working directory
## Loading the required packages
library(tidyverse)
biketrain <- bikeSharing
## Inspecting the data
summary(bikesharing)
View(bikeSharing)
## Importing the data
bikeSharing <- read.csv(C:/Users/jenkelleman/OneDrive - Microsoft/Desktop/CMU DS Capstone/raw-data/bikeSharing.csv")
## Importing the data
bikeSharing <- read.csv(Users/jenkelleman/OneDrive - Microsoft/Desktop/CMU DS Capstone/raw-data/bikeSharing.csv")
bikeSharing <- bikeSharing %>% select(-instant, -dteday, -casual, -registered)
bikeSharing <- bikeSharing %>% select(-casual, -registered)
## Inspecting the data
summary(bikesharing)
## Inspecting the data
summary(bikeSharing)
## season -  1 = spring, 2 = summer, 3 = fall, 4 = winter
## weather - 1: Clear, Few clouds, Partly cloudy, Partly cloudy ; 2: Mist + Cloudy, Mist + Broken clouds, Mist + Few clouds, Mist ;3: Light Snow, Light Rain + Thunderstorm + Scattered clouds, Light Rain + Scattered clouds ;4: Heavy Rain + Ice Pallets + Thunderstorm + Mist, Snow + Fog
## Converting a few a variables into factors
bikesharing$season <- as.factor(bikesharing$season)
## Importing the data
bikesharing <- read.csv("bikeSharing.csv")
## season -  1 = spring, 2 = summer, 3 = fall, 4 = winter
## weather - 1: Clear, Few clouds, Partly cloudy, Partly cloudy ; 2: Mist + Cloudy, Mist + Broken clouds, Mist + Few clouds, Mist ;3: Light Snow, Light Rain + Thunderstorm + Scattered clouds, Light Rain + Scattered clouds ;4: Heavy Rain + Ice Pallets + Thunderstorm + Mist, Snow + Fog
## Converting a few a variables into factors
bikesharing$season <- as.factor(bikesharing$season)
## Importing the data
bikeSharing <- read.csv("bikeSharing.csv")
## Importing the data
head(bikeSharing)
## Converting some variables into factors
bikesharing$season <- as.factor(bikesharing$season)
bikeSharing$holiday <- as.factor(bikesharing$holiday)
bikeSharing$workingday <- as.factor(bikeSharing$workingday)
---
#Set working directory
setwd("C:/Users/jenkelleman/OneDrive - Microsoft/Desktop/CMU DS Capstone/raw-data/bikeSharing")
---
#Set working directory
setwd("C:/Users/jenkelleman/OneDrive - Microsoft/Desktop/CMU DS Capstone/raw-data")
library(tidyverse)
---
#Set working directory
## Loading the required packages
library(tidyverse)
library(ggplot2)
ggplot(data=bikesharing, aes(x = hour, y=count, fill=hour))+geom_bar(stat = "identity")+ggtitle(label = "Hourly Comparison with Seasons")+theme_minimal()+theme(plot.title = element_text(hjust = 0.5, lineheight = 0.8, face = "bold"),legend.position = "none")+xlab("Weekdays")+ylab("Count")
## Loading the required packages
library(tidyverse)
library(dplyr)
library(scales)
library(ggplot2)
library(glmnet)
library(caret)
#Set working directory
## Loading the required packages
library(tidyverse)
library(dplyr)
library(scales)
library(ggplot2)
library(glmnet)
library(lubridate)
## Importing the data
head(bikeSharing)
## Inspecting the data
summary(bikeSharing)
## Checking the data types
str(bikeSharing)
## season -  1 = spring, 2 = summer, 3 = fall, 4 = winter
## weather - 1: Clear, Few clouds, Partly cloudy, Partly cloudy ; 2: Mist + Cloudy, Mist + Broken clouds, Mist + Few clouds, Mist ;3: Light Snow, Light Rain + Thunderstorm + Scattered clouds, Light Rain + Scattered clouds ;4: Heavy Rain + Ice Pallets + Thunderstorm + Mist, Snow + Fog
## Converting some variables into factors
bikeSharing$season <- as.factor(bikeSharing$season)
source("C:/Users/jenkelleman/OneDrive - Microsoft/Desktop/CMU DS Capstone/clean-data/bikesharing_clean-data.R")
